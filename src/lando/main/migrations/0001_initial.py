# Generated by Django 5.0b1 on 2023-11-27 16:35

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BaseModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Revision",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="main.basemodel",
                    ),
                ),
                ("revision_id", models.IntegerField(null=True, unique=True)),
                ("diff_id", models.IntegerField(null=True)),
                ("patch_bytes", models.BinaryField(default=b"")),
                ("patch_data", models.JSONField(default=dict)),
                ("data", models.JSONField(default=dict)),
            ],
            bases=("main.basemodel",),
        ),
        migrations.CreateModel(
            name="LandingJob",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="main.basemodel",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("SUBMITTED", "Submitted"),
                            ("IN_PROGRESS", "In progress"),
                            ("DEFERRED", "Deferred"),
                            ("FAILED", "Failed"),
                            ("LANDED", "Landed"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default=None,
                        max_length=12,
                        null=True,
                    ),
                ),
                ("error", models.TextField(blank=True, default="")),
                (
                    "error_breakdown",
                    models.JSONField(blank=True, default=dict, null=True),
                ),
                ("requester_email", models.CharField(max_length=255)),
                ("repository_name", models.CharField(max_length=255)),
                ("repository_url", models.TextField(default="")),
                ("landed_commit_id", models.TextField(default="")),
                ("attempts", models.IntegerField(default=0)),
                ("priority", models.IntegerField(default=0)),
                ("duration_seconds", models.IntegerField(default=0)),
                ("target_commit_hash", models.TextField(default="")),
                ("revisions", models.ManyToManyField(to="main.revision")),
            ],
            bases=("main.basemodel",),
        ),
    ]
