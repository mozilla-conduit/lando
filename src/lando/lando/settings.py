"""
Django settings for lando project.

Generated by 'django-admin startproject' using Django 5.0b1.

For more information on this file, see
https://docs.djangoproject.com/en/dev/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/dev/ref/settings/
"""

import os
from pathlib import Path

from typing import Any


def get_setting(
    key: str, default: Any, source: Any = os.environ, target_type=None
) -> Any:
    """Fetch a setting from a source defined by `source`.

    `source` should have a `get` method defined, which will be called when fetching the
    configuration. The type of the variable is determined by the default value, or an
    optional `target_type` if provided.
    """
    target_type = target_type or type(default)

    if isinstance(target_type, (list, tuple)) and key in source:
        return [value.strip() for value in source.get(key).split(",")]
    return target_type(source.get(key, default))


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = get_setting(
    "SECRET_KEY",
    "django-insecure-26k#ouat@%d6w5gmuhvo_vc=_@on^6=eh9*g!p-k9ynjvyc#(_",
)

DEBUG = get_setting("DEBUG", False)
ALLOWED_HOSTS = get_setting("ALLOWED_HOSTS", ["localhost", "lando.local"])
CSRF_TRUSTED_ORIGINS = get_setting(
    "CSRF_TRUSTED_ORIGINS",
    ["https://localhost", "https://lando.local"],
)

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "main",
    "utils",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "lando.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "lando.wsgi.application"


# Database
# https://docs.djangoproject.com/en/dev/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": get_setting("DEFAULT_DB_NAME", "postgres"),
        "USER": get_setting("DEFAULT_DB_USER", "postgres"),
        "PASSWORD": get_setting("DEFAULT_DB_PASSWORD", "postgres"),
        "HOST": get_setting("DEFAULT_DB_HOST", "db"),
        "PORT": get_setting("DEFAULT_DB_PORT", 5432),
    }
}


# Password validation
# https://docs.djangoproject.com/en/dev/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/dev/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/dev/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = "/staticfiles"

# Directories to include in static file collection.
STATICFILES_DIRS = [
    BASE_DIR / "static_src",
]

MEDIA_URL = "media/"
MEDIA_ROOT = "/mediafiles"


# Default primary key field type
# https://docs.djangoproject.com/en/dev/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
