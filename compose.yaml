services:
  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "postgres"]
      interval: 1s
      timeout: 10s
      retries: 10

  lando:
    user: ${UID}:${GID}
    build:
      context: .
    stdin_open: true
    tty: true
    image: lando
    command: bash -c "
      lando generate_version_file &&
      lando migrate &&
      lando collectstatic --clear --no-input &&
      uwsgi --ini /code/uwsgi.ini:local"
    volumes:
      - ./:/code
      - ./staticfiles:/staticfiles
      - media:/files/
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  hg-landing-worker:
    image: lando
    command: lando start_landing_worker hg
    environment:
      DEFAULT_GRACE_SECONDS: 10
      LANDING_WORKER_USERNAME: app
      LANDING_WORKER_TARGET_SSH_PORT: 8022
      SSH_PRIVATE_KEY: |
        -----BEGIN EC PRIVATE KEY-----
        MHcCAQEEIMiMNKEkf0vr4HrhUIrq0e9NjGNPArN7L1uy/HQZ1dA8oAoGCCqGSM49
        AwEHoUQDQgAEdakNgjerNLFXy1uMfwLjPd5/pBTbIEoZMdMV/o6s+uoMg776LF+v
        gtbfIaZbhDcJElzHwpnqGfHYU+cM4KyurA==
        -----END EC PRIVATE KEY-----
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  proxy:
    build: ./nginx
    ports:
      - 443:443
    depends_on:
      - lando
    volumes:
      - ./staticfiles:/staticfiles

  redis:
    image: redis:7.2
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]

  celery:
    image: lando
    command: lando start_celery_worker
    depends_on:
      redis:
        condition: service_healthy

volumes:
  media:
